# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not neceesary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 40

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical = 0
outer.left = 0
outer.bottom = 0
outer.top = 0
outer.right = 0

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec] # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true # If you don't touch "exec" section,
[exec.env-vars] # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
cmd-h = []

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-alt-shift-cmd-t = 'layout tiles horizontal vertical'
ctrl-alt-shift-cmd-f = 'layout h_accordion'
ctrl-alt-shift-cmd-p = "layout floating tiling"

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-alt-shift-cmd-h = 'move left'
ctrl-alt-shift-cmd-j = 'move down'
ctrl-alt-shift-cmd-k = 'move up'
ctrl-alt-shift-cmd-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-left = 'resize smart -50'
alt-right = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-alt-shift-cmd-1 = 'workspace 1'
ctrl-alt-shift-cmd-2 = 'workspace 2'
ctrl-alt-shift-cmd-3 = 'workspace 3'
ctrl-alt-shift-cmd-4 = 'workspace 4'
ctrl-alt-shift-cmd-5 = 'workspace 5'
ctrl-alt-shift-cmd-6 = 'workspace 6'
ctrl-alt-shift-cmd-7 = 'workspace 7'
ctrl-alt-shift-cmd-8 = 'workspace 8'
ctrl-alt-shift-cmd-9 = 'workspace 9'
# ctrl-alt-shift-cmd-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
# ctrl-alt-shift-cmd-b = 'workspace B'
# ctrl-alt-shift-cmd-c = 'workspace C'
# ctrl-alt-shift-cmd-d = 'workspace D'
# ctrl-alt-shift-cmd-e = 'workspace E'
# ctrl-alt-shift-cmd-f = 'workspace F'
# ctrl-alt-shift-cmd-g = 'workspace G'
# ctrl-alt-shift-cmd-i = 'workspace I'
# ctrl-alt-shift-cmd-m = 'workspace M'
# ctrl-alt-shift-cmd-n = 'workspace N'
# ctrl-alt-shift-cmd-o = 'workspace O'
# ctrl-alt-shift-cmd-p = 'workspace P'
# ctrl-alt-shift-cmd-q = 'workspace Q'
# ctrl-alt-shift-cmd-r = 'workspace R'
# ctrl-alt-shift-cmd-s = 'workspace S'
# ctrl-alt-shift-cmd-t = 'workspace T'
# ctrl-alt-shift-cmd-u = 'workspace U'
# ctrl-alt-shift-cmd-v = 'workspace V'
# ctrl-alt-shift-cmd-w = 'workspace W'
# ctrl-alt-shift-cmd-x = 'workspace X'
# ctrl-alt-shift-cmd-y = 'workspace Y'
# ctrl-alt-shift-cmd-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-alt-cmd-1 = 'move-node-to-workspace 1'
ctrl-alt-cmd-2 = 'move-node-to-workspace 2'
ctrl-alt-cmd-3 = 'move-node-to-workspace 3'
ctrl-alt-cmd-4 = 'move-node-to-workspace 4'
ctrl-alt-cmd-5 = 'move-node-to-workspace 5'
ctrl-alt-cmd-6 = 'move-node-to-workspace 6'
ctrl-alt-cmd-7 = 'move-node-to-workspace 7'
ctrl-alt-cmd-8 = 'move-node-to-workspace 8'
ctrl-alt-cmd-9 = 'move-node-to-workspace 9'
# ctrl-alt-cmd-a = 'move-node-to-workspace A'
# ctrl-alt-cmd-b = 'move-node-to-workspace B'
# ctrl-alt-cmd-c = 'move-node-to-workspace C'
# ctrl-alt-cmd-d = 'move-node-to-workspace D'
# ctrl-alt-cmd-e = 'move-node-to-workspace E'
# ctrl-alt-cmd-f = 'move-node-to-workspace F'
# ctrl-alt-cmd-g = 'move-node-to-workspace G'
# ctrl-alt-cmd-i = 'move-node-to-workspace I'
# ctrl-alt-cmd-m = 'move-node-to-workspace M'
# ctrl-alt-cmd-n = 'move-node-to-workspace N'
# ctrl-alt-cmd-o = 'move-node-to-workspace O'
# ctrl-alt-cmd-p = 'move-node-to-workspace P'
# ctrl-alt-cmd-q = 'move-node-to-workspace Q'
# ctrl-alt-cmd-r = 'move-node-to-workspace R'
# ctrl-alt-cmd-s = 'move-node-to-workspace S'
# ctrl-alt-cmd-t = 'move-node-to-workspace T'
# ctrl-alt-cmd-u = 'move-node-to-workspace U'
# ctrl-alt-cmd-v = 'move-node-to-workspace V'
# ctrl-alt-cmd-w = 'move-node-to-workspace W'
# ctrl-alt-cmd-x = 'move-node-to-workspace X'
# ctrl-alt-cmd-y = 'move-node-to-workspace Y'
# ctrl-alt-cmd-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-comma = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'com.bitwarden.desktop'
run = 'layout floating'
